[General]
network = FatTreeNdp
result-dir = exp1-1-seed1
record-eventlog=false
debug-on-errors = false
**.cmdenv-log-level = off
cmdenv-express-mode = true
cmdenv-performance-display = true
#*.visualizer.displayRoutingTables = true
**.statistic-recording=true
**.ndpApp[*].rcvdPk:vector(packetBytes).vector-recording = true
**.ndpApp[*].rcvdPk:sum(packetBytes).scalar-recording = true
**.ndpApp[*].rcvdPk:count.scalar-recording = true
**.ndpApp[*].mohThroughputNDP:mean.scalar-recording = true



**.ndpApp[*].multicastGroupIdSignal:last.scalar-recording = true
**.ndpApp[*].multisourceGroupIdSignal:last.scalar-recording = true



**.ndpApp[*].fctRecordv3:last.scalar-recording = true
**.ndpApp[*].numRcvTrimmedHeaderSigNdp:last.scalar-recording = true
**.CoreRouter[*].**.numTrimmedPkt:last.scalar-recording = true
**.CoreRouter[*].**.dropPk:count.scalar-recording = true
**.CoreRouter[*].**.rcvdPk:count.scalar-recording = true
**.aggRouters[*].**.numTrimmedPkt:last.scalar-recording = true
**.aggRouters[*].**.dropPk:count.scalar-recording = true
**.aggRouters[*].**.rcvdPk:count.scalar-recording = true
**.edgeSwitch.**.numTrimmedPkt:last.scalar-recording = true
**.edgeSwitch.**.dropPk:count.scalar-recording = true
**.edgeSwitch.**.rcvdPk:count.scalar-recording = true
**.servers[*].**.dropPk:count.scalar-recording = true
**.servers[*].**.rcvdPk:count.scalar-recording = true
**.servers[*].**.rcvdPk:sum(packetBytes).scalar-recording = true
**.servers[*].**.dropPk:sum(packetBytes).scalar-recording = true
FatTreeNdp.centralSchedulerNdp.*.scalar-recording = true
FatTreeNdp.centralSchedulerNdp.*.vector-recording = true
# The ptatern matcher in INI file always applies the first pattern matching in the file starting from the top. 
# This means that the order of patterns are important.  First enable the recording on all vectors you need and then disable the rest with 
**.scalar-recording=false
**.vector-recording=false
**.bin-recording=false
# k = 4 (16 servers),  k = 6 (54 servers),  k = 8 (128 servers),  k = 10 (250 servers),  
# k = 12 (432 servers),  k = 14 (686 servers),  k = 16 (1024 servers)
**.k = ${FatTreeSize=4..16 step 2}
**.kValue = ${FatTreeSize}
**.trafficMatrixType = ${"permTM"}  #randTM permTM
**.arrivalRate = 2500
**.shuffle = true
**.flowSize = 100   # symbols (each symbol 1500B)
**.numShortFlows = ${numShortFlows=0..999 step 1, 1000..9999 step 100, 10000, 12000, 20000,50000,100000}
**.longFlowSize = 1  # 2000MiB  not used
**.percentLongFlowNodes = 0
**.initialWindow = 8
**.IW = 8 # same value as the one in the above line,
# it is used by the central Node to do scalarRecord in config.csv as we just enable scalar records in this module not for Ndp module. 

**.ndpSwitchQueueLength = 30  # FYIIII you need to change the value below as well
# same value as queue.frameCapacity below. This is  used only to store this value in the config.csv (as IW)

**.isWebSearchWorkLoad = false 
**.perPacketEcmp = true
**.perFlowEcmp = false
**.seedValue = 1111
#Incast parameters
#**.numIncastSenders =${1..70 step 3} 

#multicasting parameters  & ultiSourcing parameters
**.oneToOne =    true 
**.oneToMany = false 
**.manyToOne =  false 
**.daisyChainGFS =  false 
**.numReplica = 5 
**.numRunningMulticastGroups = 1
**.numRunningMultiSourcingGroups = 300 

**.servers*.ppp[*].queueType = ""
# NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )

**.ppp[*].queueType = "NDPQueue" # in routers DropTailQueue NDPQueue
**.ppp[*].queue.frameCapacity = ${30..30 step 1}  # in routers




**.ndpType = "Ndp"
**.ndp.ndpAlgorithmClass = "DumbNDP"
**.ndp.mss=1460
**.numNdpApps =1
**.server*.ndpApp[0].typename = "NdpBasicClientApp"
**.server*.ndpApp[0].connectAddress = "server*"
**.server*.ndpApp[0].connectPort = 80
**.server*.ndpApp[0].startTime =0s
**.server*.ndpApp[0].numPacketsToSend = 1
**.channel.throughput.result-recording-modes=all




