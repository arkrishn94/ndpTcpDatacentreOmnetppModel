[General]
network = StaticRouting3
  #warmup-period = 16min#120s
#repeat = 2
seed-set = 1
*.configurator.dumpAddresses = true
*.configurator.dumpTopology = true
*.configurator.dumpLinks = true
*.configurator.dumpRoutes = true
*.configurator.addStaticRoutes = true
*.configurator.addDefaultRoutes=false
*.configurator.addSubnetRoutes=false
*.configurator.optimizeRoutes=false
#*.*.networkLayer.arpType = "GlobalARP"
#*.*.routingTable.netmaskRoutes = ""
 *.visualizer.networkRouteVisualizer.lineColor = "blue"
  *.visualizer.networkRouteVisualizer.displayRoutes = true
 *.visualizer.networkRouteVisualizer.lineWidth =  10
 *.visualizer.interfaceTableVisualizer.backgroundColor = "blue"
 *.visualizer.routingTableVisualizer.displayRoutingTables = true

 *.visualizer.*.displayInterfaceTables = true
  
debug-on-errors = true
 #*.CoreRouter[*].hasOSPF = true

#*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
#*.visualizer.interfaceTablebVisualizer.nodeFilter = "not (*switch* or *Switch* or *AP*)"
#*.visualizer.routingTableVisualizer.displayRoutingTables = true

 # NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity =  50#${5..10000 step 500}  # in routers

#k value of fat tree ${k=2..16 step 2} 
 
#**.fattree.vector-recording =  true

 

 **.tcpType ="TCP"
**.tcp.advertisedWindow = 65535
**.tcp.mss=1000
**.tcp.nagleEnabled = false
**.tcp.receiveQueueClass = default
**.tcp.sendQueueClass = default
**.tcp.tcpAlgorithmClass = default


[Config oneClient]

 **.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPBasicClientApp"
**.client1.tcpApp[*].localAddress = ""
**.client1.tcpApp[*].localPort = -1
**.client1.tcpApp[*].connectPort = 80

  **.client1.tcpApp[*].connectAddress = "Core1"
**.client1.tcpApp[*].startTime = 0s
**.client1.tcpApp[*].requestLength = 350B
**.client1.tcpApp[*].replyLength =50000B
**.client1.tcpApp[*].thinkTime = 3s
**.client1.tcpApp[*].idleInterval = 10s
**.client1.tcpApp[*].reconnectInterval = 50s


# tcp apps
**.server.numTcpApps = 1
**.server.tcpApp[*].typename = "TCPSrvHostApp"
**.server.tcpApp[*].serverThreadClass = "TCPGenericSrvThread"
**.server.tcpApp[*].localAddress = ""
**.server.tcpApp[*].localPort = 80
    
**.tcpApp[*].dataTransferMode = "object"

 

[Config AllClients]

 **.client*.numTcpApps = 1
**.client*.tcpApp[*].typename = "TCPBasicClientApp"
**.client*.tcpApp[*].localAddress = ""
**.client*.tcpApp[*].localPort = -1
**.client*.tcpApp[*].connectPort = 80

**.client*.tcpApp[*].connectAddress = "server"
**.client*.tcpApp[*].startTime = 0s
**.client*.tcpApp[*].requestLength = 350B
**.client*.tcpApp[*].replyLength =50000B
**.client*.tcpApp[*].thinkTime = 3s
**.client*.tcpApp[*].idleInterval = 10s
**.client*.tcpApp[*].reconnectInterval = 50s


# tcp apps
**.server.numTcpApps = 1
**.server.tcpApp[*].typename = "TCPSrvHostApp"
**.server.tcpApp[*].serverThreadClass = "TCPGenericSrvThread"
**.server.tcpApp[*].localAddress = ""
**.server.tcpApp[*].localPort = 80
    
**.tcpApp[*].dataTransferMode = "object"
