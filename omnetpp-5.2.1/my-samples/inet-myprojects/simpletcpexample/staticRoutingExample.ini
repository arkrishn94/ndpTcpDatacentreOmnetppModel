[General]
network = StaticRouting
  #warmup-period = 16min#120s
#repeat = 2
seed-set = 1
*.configurator.dumpAddresses = true
*.configurator.dumpTopology = true
*.configurator.dumpLinks = true
*.configurator.dumpRoutes = true
*.configurator.addStaticRoutes = true
*.configurator.addDefaultRoutes=false
*.configurator.addSubnetRoutes=false
*.configurator.optimizeRoutes=false
#*.*.networkLayer.arpType = "GlobalARP"
#*.*.routingTable.netmaskRoutes = ""
*.visualizer.networkRouteVisualizer.lineColor = "red"
*.visualizer.networkNodeVisualizer.visualizerTargetModule = "server"

debug-on-errors = true
 #*.CoreRouter[*].hasOSPF = true

#*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
#*.visualizer.interfaceTableVisualizer.nodeFilter = "not (*switch* or *Switch* or *AP*)"
#*.visualizer.routingTableVisualizer.displayRoutingTables = true

 

#k value of fat tree ${k=2..16 step 2} 
 
**.fattree.vector-recording =  true

# NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity =  10#${5..10000 step 500}  # in routers
 
 **.tcpType ="TCP"
**.tcp.advertisedWindow = 2000
**.tcp.mss=1000
**.tcp.nagleEnabled = false
**.tcp.receiveQueueClass = default
**.tcp.sendQueueClass = default
**.tcp.tcpAlgorithmClass = default

# tcp apps
**.server.numTcpApps = 1
 **.server.tcpApp[*].typename = "TCPSessionApp"
**.server.tcpApp[*].localAddress = ""
**.server.tcpApp[*].localPort = -1
**.server.tcpApp[*].connectAddress = "client"  # server's interface towards router
**.server.tcpApp[*].connectPort = 80

**.server.tcpApp[*].sendBytes = 10 kB 
**.server.tcpApp[*].sendScript = ""
**.server.tcpApp[*].tClose = -1s
 


# server
**.client.numTcpApps = 1
**.client.tcpApp[*].typename = "TCPSinkApp"
**.client.tcpApp[*].localAddress = ""
**.client.tcpApp[*].localPort = 80
**.tcpApp[*].dataTransferMode = "bytecount"
 

#**.configurator.addDefaultRoutes = 

#**.networkLayer.configurator.networkConfiguratorModule = ""
