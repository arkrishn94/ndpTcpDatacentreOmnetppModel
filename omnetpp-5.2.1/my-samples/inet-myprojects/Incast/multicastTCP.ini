
[General]
network = Incast
 record-eventlog=false
**.source.param-record-as-scalar = true 

#sim-time-limit = 100s

#total-stack = 7MiB

#debug-on-errors = true
#record-eventlog = true
#[Config multipleRuns]

**.numNodes =  ${1..70 step 1}
# **.numNodes=70
**.cmdenv-log-level = off
cmdenv-express-mode = false
 


**.Incast.vector-recording =  true
**.tcpType = "TCP"
**.tcp.advertisedWindow = 4000
**.tcp.delayedAcksEnabled = false
**.tcp.increasedIWEnabled = false
**.tcp.limitedTransmitEnabled = false
**.tcp.mss=1000
**.tcp.nagleEnabled = false
**.tcp.receiveQueueClass = default
**.tcp.recordStats = true
**.tcp.sackSupport = false
**.tcp.sendQueueClass = default
**.tcp.tcpAlgorithmClass = default
**.tcp.timestampSupport = false
**.tcp.windowScalingSupport = false

# tcp apps
**.server.numTcpApps =   2
**.server.tcpApp[*].typename = "TCPSessionApp"
**.server.tcpApp[0].active = true
**.server.tcpApp[0].localAddress = ""
**.server.tcpApp[0].localPort = -1
**.server.tcpApp[0].connectAddress = "client[0]"  # server's interface towards router
**.server.tcpApp[0].connectPort = 80

**.server.tcpApp[0].tOpen = 0s
**.server.tcpApp[0].tSend = 0s
**.server.tcpApp[0].sendBytes = 60kB 
**.server.tcpApp[0].sendScript = ""
**.server.tcpApp[0].tClose = -1s


 
**.server.tcpApp[1].typename = "TCPSessionApp"
**.server.tcpApp[1].active = true
**.server.tcpApp[1].localAddress = ""
#**.server.tcpApp[1].localPort = -1
**.server.tcpApp[1].connectAddress = "client[1]"  # server's interface towards router
**.server.tcpApp[1].connectPort = 80

**.server.tcpApp[1].tOpen = 0s
**.server.tcpApp[1].tSend = 0s
**.server.tcpApp[1].sendBytes = 60kB 
**.server.tcpApp[1].sendScript = ""
**.server.tcpApp[1].tClose = -1s

#**.server.tcpApp[*].typename = "TCPEchoApp"
#
#**.server.tcpApp[*].localAddress = ""
#**.server.tcpApp[*].localPort = 80
#**.server*.tcpApp[0].echoFactor = 1.0
#**.server*.tcpApp[0].echoDelay = 0
#**.tcpApp[*].dataTransferMode = "bytecount"
**.client*.numTcpApps =   1

**.client*.tcpApp[*].typename = "TCPSinkApp"
**.client*.tcpApp[*].localAddress = ""
**.client*.tcpApp[*].localPort = 80
**.tcpApp[*].dataTransferMode = "bytecount"

# NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )
**.ppp[*].queueType = "DropTailQueue" # in routers  DropTailQueue
**.ppp[*].queue.frameCapacity =  16#${5..10000 step 500}  # in routers
 

#**.thruputDisplayFormat= "P"


**.channel.throughput.result-recording-modes=all

